
# Docker compose to set up Experiment tracking system Mlflow-postgres-S3

version: '3.8'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mlflow
    ports:
      - "5439:5432"
    deploy:
      resources:
        limits:
          cpus: "0.5" # Limit to 0.5 CPU
          memory: "512M" # Limit to 512 MB of memory
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - tracking

  minio:
    image: docker.io/bitnami/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio/:/data 
    environment:
      - MINIO_ACCESS_KEY=your_username
      - MINIO_SECRET_KEY=your_password
      - MINIO_ROOT_USER=your_username
      - MINIO_ROOT_PASSWORD=your_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - tracking

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.0.1
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:5000
      BACKEND_URI: postgresql://admin:admin@postgres:5432/mlflow
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      ARTIFACT_ROOT: s3://mlflow-artifacts
      AWS_ACCESS_KEY_ID: your_username
      AWS_SECRET_ACCESS_KEY: your_password
    depends_on:
      - postgres
      - minio
    networks:
      - tracking
    command: >
      /bin/sh -c "pip install psycopg2-binary && pip install boto3 && mlflow server
      --backend-store-uri postgresql://admin:admin@postgres:5432/mlflow
      --default-artifact-root s3://mlflow-artifacts
      --host 0.0.0.0
      --port 5000"
      
    
    


volumes:
  pgdata:
  portainer_data:
  minio:

networks:
  tracking:
    driver: bridge
